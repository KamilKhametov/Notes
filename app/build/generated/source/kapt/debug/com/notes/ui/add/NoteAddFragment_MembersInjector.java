// Generated by Dagger (https://dagger.dev).
package com.notes.ui.add;

import androidx.lifecycle.ViewModelProvider;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Named;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NoteAddFragment_MembersInjector implements MembersInjector<NoteAddFragment> {
  private final Provider<ViewModelProvider.Factory> viewModelFactoryProvider;

  public NoteAddFragment_MembersInjector(
      Provider<ViewModelProvider.Factory> viewModelFactoryProvider) {
    this.viewModelFactoryProvider = viewModelFactoryProvider;
  }

  public static MembersInjector<NoteAddFragment> create(
      Provider<ViewModelProvider.Factory> viewModelFactoryProvider) {
    return new NoteAddFragment_MembersInjector(viewModelFactoryProvider);
  }

  @Override
  public void injectMembers(NoteAddFragment instance) {
    injectViewModelFactory(instance, viewModelFactoryProvider.get());
  }

  @InjectedFieldSignature("com.notes.ui.add.NoteAddFragment.viewModelFactory")
  @Named("Add")
  public static void injectViewModelFactory(NoteAddFragment instance,
      ViewModelProvider.Factory viewModelFactory) {
    instance.viewModelFactory = viewModelFactory;
  }
}
