// Generated by Dagger (https://dagger.dev).
package com.notes.di;

import com.notes.data.NoteDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AddViewModelFactory_Factory implements Factory<AddViewModelFactory> {
  private final Provider<NoteDatabase> noteDatabaseProvider;

  public AddViewModelFactory_Factory(Provider<NoteDatabase> noteDatabaseProvider) {
    this.noteDatabaseProvider = noteDatabaseProvider;
  }

  @Override
  public AddViewModelFactory get() {
    return newInstance(noteDatabaseProvider.get());
  }

  public static AddViewModelFactory_Factory create(Provider<NoteDatabase> noteDatabaseProvider) {
    return new AddViewModelFactory_Factory(noteDatabaseProvider);
  }

  public static AddViewModelFactory newInstance(NoteDatabase noteDatabase) {
    return new AddViewModelFactory(noteDatabase);
  }
}
