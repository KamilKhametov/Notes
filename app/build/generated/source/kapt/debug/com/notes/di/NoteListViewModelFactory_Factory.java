// Generated by Dagger (https://dagger.dev).
package com.notes.di;

import com.notes.data.NoteDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NoteListViewModelFactory_Factory implements Factory<NoteListViewModelFactory> {
  private final Provider<NoteDatabase> noteDatabaseProvider;

  public NoteListViewModelFactory_Factory(Provider<NoteDatabase> noteDatabaseProvider) {
    this.noteDatabaseProvider = noteDatabaseProvider;
  }

  @Override
  public NoteListViewModelFactory get() {
    return newInstance(noteDatabaseProvider.get());
  }

  public static NoteListViewModelFactory_Factory create(
      Provider<NoteDatabase> noteDatabaseProvider) {
    return new NoteListViewModelFactory_Factory(noteDatabaseProvider);
  }

  public static NoteListViewModelFactory newInstance(NoteDatabase noteDatabase) {
    return new NoteListViewModelFactory(noteDatabase);
  }
}
